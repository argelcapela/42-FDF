// void draw_zoom(int *Xi, int *Yi, int *Xf, int *Yf, t_fdf *fdf)
// {
//     *Xi *= fdf->zoom;
//     *Yi *= fdf->zoom;
//     *Xf *= fdf->zoom;
//     *Yf *= fdf->zoom;
// }

// void draw_move(int *Xi, int *Yi, int *Xf, int *Yf, t_fdf *fdf)
// {
//     *Xi += fdf->move_x;
//     *Yi += fdf->move_y;
//     *Xf += fdf->move_x;
//     *Yf += fdf->move_y;
// }

// void draw_rotation(int *Xi, int *Yi, int *Xf, int *Yf, t_fdf *fdf)
// {
//    if (Xi && Yi && Xf && Yf && fdf)
//    {

//    }
// }

// void draw_projection(int *Xi, int *Yi, int *Xf, int *Yf, int *z, int *z1, t_fdf *fdf)
// {
//     if (fdf->perspective_3d)
//     {
//         add_isometric_projection(Xi, Yi, *z, fdf);
//         add_isometric_projection(Xf, Yf, *z1, fdf);
//     }
// }
// void draw_color(int *z, int *z1, t_fdf *fdf)
// {

//     fdf->color = (z || z1) ? 0xe80c0c : 0xffffff;
// }

// void draw_alignment(int *Xi, int *Yi, int *Xf, int *Yf, t_fdf *fdf)
// {
//     int     x_center;
//     int     y_center;

//     x_center = (fdf->window_width / 2) - (fdf->width * 2) - 50;
//     y_center = (fdf->window_height / 3) - (fdf->height);
//     *Xi += x_center;
//     *Yi += y_center;
//     *Xf += x_center;
//     *Yf += y_center;
// }

// void    bresenham(int Xi, int Yi, int Xf, int Yf, t_fdf *fdf)
// {
//     int     dX;
//     int     dY;
//     int     DP;
//     // int     z;
//     // int     z1;

//     // z  = fdf->matrix[Xi][Yi];
//     // z1 = fdf->matrix[Xf][Yf];
//     draw_zoom(&Xi, &Yi, &Xf, &Yf, fdf);
//     // draw_move(&Xi, &Yi, &Xf, &Yf, fdf);
//     // draw_rotation(&Xi, &Yi, &Xf, &Yf, fdf);
//     // draw_projection(&Xi, &Yi, &Xf, &Yf, &z, &z1, fdf);
//     // draw_color(&z, &z1, fdf);
//     draw_alignment(&Xi, &Yi, &Xf, &Yf, fdf);


//     dX = (Xf - Xi);
//     dY = (Yf - Yi);
//     DP = 2 * (dY - dX);
//     while (Xi <= Xf)
//     {
//         mlx_pixel_put(fdf->mlx_ptr, fdf->win_ptr, Xi, Yi, 0xffffff);
//         Xi++;
//         if (DP >= 0)
//         {
//             Yi++;
//             DP = DP + (2 * dY) - (2 * dX);
//         }
//         else
//             DP = DP + (2 * dY);
//     }
// }